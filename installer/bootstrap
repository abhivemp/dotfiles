#!/usr/bin/env python


# bootstrap is a cli tool that allows you to control scripts for your dotfiles

import os, sys

if __name__=="__main__":

    cmd_length = len(sys.argv)
    repo_path = os.path.abspath(os.path.dirname(__file__))

    # Functions runs the symlink script
    def run_linker():
        os.system("sh linker.sh")
        print("Symlink file successfully ran!")

    # updates the bashrc
    def run_bash():
        os.system("sh bashrc_update.sh")
        print("Source bashrc success!")

    if(cmd_length == 2):
        # Update symlinks
        if(sys.argv[1] == "link"):
            run_linker()
        # Source bashrc
        if(sys.argv[1] == "bash"):
            run_bash()

        # Update symlinks & source bashrc
        if(sys.argv[1] == 'update'):
            run_bash()
            run_linker()

    # Show a cool menu
    elif((cmd_length == 1) or print_help):
        menu_file = os.path.normpath(os.path.join(repo_path, "menu.txt"))
        os.system("cat {}".format(menu_file))
    
    # If these are not commands that are programmed
    else:
        print("bootstrap: command not found")

